// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TutorZealand.Models;

#nullable disable

namespace TutorZealand.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("TutorZealand.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EducationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EducationId = 1,
                            File = "[0,2,3,45,5,1,2]",
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.AssistantTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EducationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AssistantTeachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Jeg hedder ole",
                            EducationId = 1,
                            Email = "ole@zealand.dk",
                            Name = "Ole Jensen",
                            Telephone = "22331122"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Jeg hedder Frank og elsker frankurt",
                            EducationId = 1,
                            Email = "frank@zealand.dk",
                            Name = "Frank Frankfurter",
                            Telephone = "33551122"
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SessionId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            SessionId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            SessionId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            SessionId = 1,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            SessionId = 1,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 6,
                            SessionId = 1,
                            StudentId = 6
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Datamatiker"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Multimedie designer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finansøkonom"
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Roskilde Campus"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Næstved Campus"
                        },
                        new
                        {
                            Id = 3,
                            Name = "København Campus"
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            Name = "1A"
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 1,
                            Name = "2A"
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 1,
                            Name = "3A"
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 2,
                            Name = "1B"
                        },
                        new
                        {
                            Id = 5,
                            LocationId = 2,
                            Name = "2B"
                        },
                        new
                        {
                            Id = 6,
                            LocationId = 2,
                            Name = "3B"
                        },
                        new
                        {
                            Id = 7,
                            LocationId = 3,
                            Name = "1C"
                        },
                        new
                        {
                            Id = 8,
                            LocationId = 3,
                            Name = "2C"
                        },
                        new
                        {
                            Id = 9,
                            LocationId = 3,
                            Name = "3C"
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssistantTeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EducationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssistantTeacherId = 1,
                            Description = "Vi skal lære om basale programmerings ting sammen med mig, Ole Jensen.",
                            EducationId = 1,
                            EndDate = new DateTime(2024, 5, 29, 23, 29, 52, 917, DateTimeKind.Local).AddTicks(8547),
                            IsActive = true,
                            LocationId = 1,
                            RoomId = 1,
                            StartDate = new DateTime(2024, 5, 29, 22, 29, 52, 917, DateTimeKind.Local).AddTicks(8503),
                            SubjectId = 1
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EducationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EducationId = 1,
                            Email = "mert@zealand.dk",
                            Name = "Mert Gultekin"
                        },
                        new
                        {
                            Id = 2,
                            EducationId = 1,
                            Email = "milad@zealand.dk",
                            Name = "Milad Muladsen"
                        },
                        new
                        {
                            Id = 3,
                            EducationId = 1,
                            Email = "vang@zealand.dk",
                            Name = "Vagn Ravn"
                        },
                        new
                        {
                            Id = 4,
                            EducationId = 1,
                            Email = "hulle@zealand.dk",
                            Name = "Hulle Tullesen"
                        },
                        new
                        {
                            Id = 5,
                            EducationId = 1,
                            Email = "jared@zealand.dk",
                            Name = "Jared Padelecki"
                        },
                        new
                        {
                            Id = 6,
                            EducationId = 1,
                            Email = "jensen@zealand.dk",
                            Name = "Jensen Ackles"
                        });
                });

            modelBuilder.Entity("TutorZealand.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Learn the basics of programming using Python.",
                            Name = "Introduction to Programming"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Understand the principles of OOP and how to apply them in C#.",
                            Name = "Object-Oriented Programming"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Build dynamic websites and web applications using HTML, CSS, and JavaScript.",
                            Name = "Web Development"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Study fundamental data structures and algorithms in Java.",
                            Name = "Data Structures and Algorithms"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Learn about relational databases and SQL.",
                            Name = "Database Management Systems"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Create mobile applications for Android and iOS using Flutter.",
                            Name = "Mobile App Development"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Explore the software development lifecycle and best practices.",
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Introduction to machine learning concepts and applications using Python.",
                            Name = "Machine Learning"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Understand cloud services and how to deploy applications to the cloud.",
                            Name = "Cloud Computing"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Learn about securing systems, networks, and data from cyber threats.",
                            Name = "Cybersecurity"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
